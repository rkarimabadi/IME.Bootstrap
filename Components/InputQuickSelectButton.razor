@inherits Button
<button type="button" class="@_class" disabled="@_isDisabled" @onclick="Clicked">@ChildContent</button>
@code {
    [Parameter] public string Value { set; get; }
    [CascadingParameter] private InputQuickSelect Parent { get; set; }

    protected override void OnInitialized()
    {
        if (Parent == null)
            throw new ArgumentNullException(nameof(Parent), "InputQuickSelectButton must exist within a InputQuickSelect");
        Parent.AddButton(this);
        base.OnInitialized();
    }
    protected void Clicked(EventArgs args)
    {
        Parent.ActivateButton(this);
        _color = _color == Common.PredefinedColor.Primary ? Common.PredefinedColor.Info : Common.PredefinedColor.Primary;
        _isActive = !_isActive;
        buildClass();
    }
    internal void Deactive()
    {
        _color = Common.PredefinedColor.Info;
        _isActive = false;
        buildClass();
    }
}
