@using Microsoft.JSInterop
@inherits Button
@inject IJSRuntime JS

        <label class="btn btn-primary @(_isActive ? "active" : "")">
            <input type="radio" @onchange="Clicked" class="d-none" />
            @Value
        </label>
@code {
    [Parameter] public string Value { set; get; }
    [CascadingParameter] private InputQuickSelect Parent { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (Parent == null)
            throw new ArgumentNullException(nameof(Parent), "InputQuickSelectButton must exist within a InputQuickSelect");
        Parent.AddButton(Value, this);
        base.OnInitialized();        
    }
    protected  async Task Clicked(EventArgs args)
    {       
        _isActive = !_isActive;
        buildClass();
        Parent.ActivateButton(this);
    }
    internal void Deactive()
    {
        _isActive = false;
        buildClass();
    }
    internal async Task Active()
    {
        _isActive = true;
        buildClass();
    }
}
